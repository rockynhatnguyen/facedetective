{"version":3,"sources":["components/Logo/logo.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","isSignedIn","onRouteChange","react_default","a","createElement","className","onClick","Logo","tilt_default","options","max","src","logo","alt","Rank","ImageLinkForm","onInputChange","onSubmit","type","onChange","FaceRecognition","imageUrl","box","noFace","errorStatus","id","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","name","value","Register","particlesOptions","particles","number","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","image","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","app","Clarifai","App","apiKey","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reset","setState","error","state","initialError","console","log","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","event","input","target","models","predict","then","response","catch","err","status","route","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48c0f322.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e009a67d.png\";","import React from 'react';\nimport './Navigation.css';\n\nconst Navigation = ({ isSignedIn, onRouteChange }) => {\n    if(isSignedIn) {\n      return (\n        <nav className='nav'>\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim white underline pa3 pointer'>Sign Out</p>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className='nav'>\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim white underline pa3 pointer'>Sign In</p>\n          <p onClick={() => onRouteChange('register')} className='f3 link dim white underline pa3 pointer'>Register</p>\n        </nav>\n      );\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport logo from './logo.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <Tilt className=\"Tilt br2 shadow2\" options={{ max : 50 }}>\n        <div className=\"Tilt-inner\"><img className='logo-image' src={logo} alt='Logo of a robot head.'/></div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport './Rank.css';\n\nconst Rank = () => {\n  return (\n    <div>\n      <div className='rank white f3'>\n        {'Hello, your current rank is...'}\n      </div>\n      <div className='rank white f1 pt3 pl2 pr2 pb0'>\n        {'#5'}\n      </div>\n    </div>\n  );\n}\n\nexport default Rank;\n","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\n  return (\n    <div className='imagelinkform'>\n      <p className='f1 main-title'>Face Detective</p>\n      <p className='f3 pa3'>\n        This Magic Brain will detect faces in your pictures. Paste an image URL to begin.\n      </p>\n      <div className='center'>\n        <div className='form pa4 br2 w-60 shadow-5 center'>\n          <input className='f4 p2 w-70 center' type='text' onChange={onInputChange}/>\n          <button className='button w-25 grow f4 br2 link ph3 pv2 dib white' onClick={onSubmit}>Detect</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box, noFace, errorStatus }) => {\n  if (noFace && errorStatus === 400) {\n    return (\n      <div className='center'>\n        <h1>URL not an image.</h1>\n      </div>\n    )\n  } else if (noFace) {\n    return (\n      <div className='center'>\n        <h1>No face detected.</h1>\n      </div>\n    )\n  }\n\n  if (imageUrl === '') {\n    return null;\n  }\n\n  return (\n    <div className='center ma'>\n      <div className=\"absolute\">\n        <img className='face-image' id='inputimage' src={ imageUrl } alt='Detected face.'/>\n        <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\n      </div>\n    </div>\n  )\n}\n\nexport default FaceRecognition;\n","import React from 'react';\nimport './Signin.css';\n\nconst Signin = ({ onRouteChange }) => {\n  return (\n    <article className=\"signin br3 ba b--white-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0 white\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f5 white\" htmlFor=\"email-address\">Email</label>\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f5 white\" htmlFor=\"password\">Password</label>\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\" type=\"password\" name=\"password\"  id=\"password\" />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              onClick={() => onRouteChange('home')}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib white\"\n              type=\"submit\"\n              value=\"Sign in\" />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db white pointer\">Register</p>\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n}\n\nexport default Signin;\n","import React from 'react';\nimport './Register.css';\n\nconst Register = ({ onRouteChange }) => {\n  return (\n    <article className=\"signin br3 ba b--white-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0 white\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f5 white\" htmlFor=\"Name\">Name</label>\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\" type=\"text\" name=\"name\"  id=\"name\" />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f5 white\" htmlFor=\"Name\">Email</label>\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\" type=\"email\" name=\"email-address\"  id=\"email\" />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f5 white\" htmlFor=\"password\">Password</label>\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\" type=\"password\" name=\"password\"  id=\"password\" />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              onClick={() => onRouteChange('home')}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib white\"\n              type=\"submit\"\n              value=\"Register\" />\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n}\n\nexport default Register;\n","import React from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst particlesOptions = {\n  particles: {\n    number: { value: 100, density: { enable: true, value_area: 1200 } },\n    color: { value: \"#ffffff\" },\n    shape: {\n      type: \"circle\",\n      stroke: { width: 0, color: \"#000000\" },\n      polygon: { nb_sides: 5 },\n      image: { src: \"img/github.svg\", width: 100, height: 100 }\n    },\n    opacity: {\n      value: 0.5,\n      random: false,\n      anim: { enable: false, speed: 1, opacity_min: 0.1, sync: false }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: { enable: false, speed: 40, size_min: 0.1, sync: false }\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: { enable: false, rotateX: 600, rotateY: 1200 }\n    }\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: { enable: true, mode: \"repulse\" },\n      onclick: { enable: true, mode: \"push\" },\n      resize: true\n    },\n    modes: {\n      grab: { distance: 400, line_linked: { opacity: 1 } },\n      bubble: { distance: 400, size: 40, duration: 2, opacity: 8, speed: 3 },\n      repulse: { distance: 200, duration: 0.4 },\n      push: { particles_nb: 4 },\n      remove: { particles_nb: 2 }\n    }\n  },\n  retina_detect: true\n}\n\nconst app = new Clarifai.App({\n  apiKey: 'd4897f8f40844202ace35835ba1ee416'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      error: false,\n      errorStatus: '1000',\n      initialError: false,\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  reset = () => {\n    this.setState({ error: this.state.initialError });\n    console.log('RESET to error false.');\n    console.log(this.state.error);\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value })\n    this.reset();\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models.predict(\n      \"a403429f2ddf4b49b307e318f00e528b\",\n      // don't use this.state.imageUrl will throw error\n      this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => {\n      console.log('There was an error.');\n      this.setState({ error: true });\n      console.log(this.state.errorStatus);\n      console.log(err);\n      console.log(err.status);\n      this.setState({ errorStatus: err.status });\n      console.log(this.state.errorStatus);\n      console.log(this.state.error);\n    });\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home'\n          ? <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit} />\n            <FaceRecognition\n              box={this.state.box}\n              imageUrl={this.state.imageUrl}\n              noFace={this.state.error}\n              errorStatus={this.state.errorStatus} />\n          </div>\n          : (\n            this.state.route === 'signin'\n              ? <Signin onRouteChange={this.onRouteChange} />\n              : <Register onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}